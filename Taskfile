#!/bin/bash

#
# PRIVATE
#

function _noop {
    echo "Not implemented yet"
}

#
# PUBLIC
#

function enable-dev-cert {
    mkcert -install
}

function disable-dev-cert {
    mkcert -uninstall
}

function generate-dev-cert {
    mkcert -cert-file ./tools/proxy/contents/ssl/test.crt --key-file ./tools/proxy/contents/ssl/test.key http.web4humans.com
}

function remove-dev-cert {
    rm ./tools/proxy/contents/ssl/*
}

function build-dev-image {
    PROEJCT_DIR="${PWD}" PORT="${PORT}" docker compose --file tools/ruby/docker-compose.yml build
}

function run-dev-image {
    OWNER_PASSWORD="${OWNER_PASSWORD}" PORT="${PORT}" PROJECT_DIR="$PWD" docker compose --file tools/ruby/docker-compose.yml run --rm --remove-orphans --service-ports ruby
}


function start-prod-server {
    OWNER_PASSWORD="${OWNER_PASSWORD}" HOME_DIR=`pwd` bundle exec puma  --port "${PORT}" --no-config --workers 0
}

function start-dev-server {
    OWNER_PASSWORD="${OWNER_PASSWORD}" HOME_DIR=`pwd` PORT="${PORT}" bundle exec guard -i
}

function build-prod-image {
    docker build -t http-web4humans:local-prod .
}

function run-prod-image {
    docker run -e OWNER_PASSWORD="${OWNER_PASSWORD}" -p "${PORT}:${INTERNAL_PORT:-3000}" \
        -e PORT="${INTERNAL_PORT:-3000}" -e WORKERS="${WORKERS}" -e PROJECT_DIR="$PWD" \
        --rm http-web4humans:local-prod
}

function help {
    echo "$0 <task> <args>"
    echo "Runs the tasks listed below."
    echo "To find out more about them, either read the source"
    echo "for ${0} or the docs located in 'docs/tasks.md'."
    echo "Tasks:"
    # Note that this omits private functions - those prefixed with an _
    compgen -A function | grep -e '^[^_]' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time "${@:-help}"
